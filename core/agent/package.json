{
  "name": "@symbi/agent-framework",
  "version": "1.0.0",
  "description": "AI Agent Production Framework for SYMBI Symphony - A comprehensive framework for building, deploying, and managing AI agents in production environments",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist/**/*",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "dev": "ts-node-dev --respawn --transpile-only src/index.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "clean": "rimraf dist",
    "prepublishOnly": "npm run clean && npm run build",
    "example:repository": "ts-node examples/simple-repository-manager.ts",
    "example:website": "ts-node examples/website-manager.ts",
    "example:integration": "ts-node examples/integration-manager.ts"
  },
  "keywords": [
    "ai",
    "agent",
    "framework",
    "production",
    "symbi",
    "symphony",
    "automation",
    "orchestration",
    "microservices",
    "typescript"
  ],
  "author": "SYMBI Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/symbi-ai/symphony-remote.git",
    "directory": "core/agent"
  },
  "bugs": {
    "url": "https://github.com/symbi-ai/symphony-remote/issues"
  },
  "homepage": "https://github.com/symbi-ai/symphony-remote/tree/main/core/agent#readme",
  "dependencies": {
    "axios": "^1.6.0",
    "ws": "^8.14.0",
    "uuid": "^9.0.0",
    "joi": "^17.11.0",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@types/node": "^20.8.0",
    "@types/ws": "^8.5.0",
    "@types/uuid": "^9.0.0",
    "@types/joi": "^17.2.0",
    "@types/jest": "^29.5.0",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.0",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.2.0",
    "prettier": "^3.0.0",
    "rimraf": "^5.0.0"
  },
  "peerDependencies": {
    "typescript": ">=4.5.0"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/examples/**/*"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ]
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "eslint:recommended",
      "@typescript-eslint/recommended",
      "prettier"
    ],
    "plugins": [
      "@typescript-eslint",
      "prettier"
    ],
    "rules": {
      "prettier/prettier": "error",
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/explicit-module-boundary-types": "off"
    },
    "env": {
      "node": true,
      "es6": true
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false
  }
}